name: cpp-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*'

jobs:
  build:
    strategy:
      matrix:
        compiler:
        - {
            name: "x86_64-8.1.0-release-posix-seh-rt_v6-rev0",
            url: "https://github.com/dirkarnez/cpp-tools/raw/main/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z"
          }
        - {
            name: "winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1",
            url: "https://github.com/brechtsanders/winlibs_mingw/releases/download/11.2.0-12.0.1-9.0.0-r1/winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1.zip"
          }
        # - {
        #     name: "msvc2019"
        #   }

    runs-on: windows-latest
    env:
      libraryName: openmpi
      installationPath: openmpi-installation
    steps:
      #       tagName: libgpg-error-1.47
      # - name: git clone
      #   shell: cmd
      #   run: git clone --recurse-submodules https://dev.gnupg.org/source/libgpg-error.git && cd libgpg-error && git checkout ${{ env.tagName }}
      - uses: actions/checkout@v4
      
      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: make autoconf automake libtool autogen perl
          
      - name: curl x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
        shell: cmd
        run: |
          curl https://github.com/dirkarnez/cpp-tools/raw/main/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z -L -O -J &&^
          7z.exe x x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
          
      - name: curl cmake-3.24.0-windows-x86_64.zip
        shell: cmd
        run: curl https://github.com/Kitware/CMake/releases/download/v3.24.0/cmake-3.24.0-windows-x86_64.zip -L --output cmake-3.24.0-windows-x86_64.zip && dir && 7z.exe x cmake-3.24.0-windows-x86_64.zip
      
      - name: curl PortableGit-2.38.1-64-bit.7z.exe
        shell: cmd
        run: curl https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/PortableGit-2.38.1-64-bit.7z.exe -L --output PortableGit-2.38.1-64-bit.7z.exe && dir && 7z.exe x PortableGit-2.38.1-64-bit.7z.exe -o"PortableGit-2.38.1-64-bit"
      
      - name: curl openmpi-4.1.6.tar.gz
        shell: cmd
        run: |
          curl https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-4.1.6.tar.gz -L -O -J &&^
          7z.exe x openmpi-4.1.6.tar.gz
          
      - shell: cmd
        run: |
          .\PortableGit-2.38.1-64-bit\usr\bin\tar.exe -zxvf openmpi-4.1.6.tar.gz &&^
          rename openmpi-4.1.6 ${{ env.libraryName }}
          
      - name: set PATH, check mingw version, cmake generate, build and install
        shell: msys2 {0}
        run: |
            workspace=$(pwd) &&
            export PATH="$workspace/mingw64:$workspace/mingw64/bin:$workspace/PortableGit-2.38.1-64-bit:$workspace/PortableGit-2.38.1-64-bit/bin:$workspace/msys64/usr/bin:/usr/bin" &&
            cd ${{ env.libraryName }} && 
            g++ --version && 
            ./configure --help &&
            ./configure  --enable-static --prefix="$(pwd)/${{ env.installationPath }}" &&
            mingw32-make install
            
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "${{ env.libraryName }}/${{ env.installationPath }}"
          filename: "${{ env.libraryName }}-${{ github.ref_name }}-${{ matrix.compiler.name }}.zip"
        
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.libraryName }}/${{ env.installationPath }}/${{ env.libraryName }}-${{ github.ref_name }}-${{ matrix.compiler.name }}.zip"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
